///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V8.10.1.10194/W32 for 8051        29/Nov/2016  09:38:01 /
// Copyright 2004-2011 IAR Systems AB.                                        /
//                                                                            /
//    Core               =  plain                                             /
//    Code model         =  banked                                            /
//    Data model         =  large                                             /
//    Calling convention =  xdata reentrant                                   /
//    Constant location  =  data_rom                                          /
//    Dptr setup         =  1,16                                              /
//    Source file        =  E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\Source\Manage\rfid\I2C.c  /
//    Command line       =  -f E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zs /
//                          tack\Applications\SmartApp\CC2530DB\Devices\..\.. /
//                          \..\..\Tools\CC2530DB\f8wCoord.cfg (-DCPU32MHZ    /
//                          -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TR /
//                          UE -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8     /
//                          -DMAC_CFG_RX_MAX=5 -DZDO_COORDINATOR -DRTR_NWK    /
//                          -DSSA_CONNECTOR) -f E:\work\zigbee\ZStack-Smart-2 /
//                          .5.2b\Projects\zstack\Applications\SmartApp\CC253 /
//                          0DB\Devices\..\..\..\..\Tools\CC2530DB\f8wConfig. /
//                          cfg (-DZIGBEEPRO -DSECURE=1                       /
//                          -DZG_SECURE_DYNAMIC=1 -DREFLECTOR                 /
//                          -DDEFAULT_CHANLIST=0x00000800                     /
//                          -DZDAPP_CONFIG_PAN_ID=0xFFFF                      /
//                          -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_M /
//                          ASK=0x007F -DBEACON_REQUEST_DELAY=100             /
//                          -DBEACON_REQ_DELAY_MASK=0x00FF                    /
//                          -DLINK_STATUS_JITTER_MASK=0x007F                  /
//                          -DROUTE_EXPIRY_TIME=30 -DAPSC_ACK_WAIT_DURATION_P /
//                          OLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7           /
//                          -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3   /
//                          -DNWK_MAX_DATA_RETRIES=2                          /
//                          -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9        /
//                          -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40          /
//                          -DNWK_MAX_BINDING_ENTRIES=4                       /
//                          -DMAX_BINDING_CLUSTER_IDS=4                       /
//                          "-DDEFAULT_KEY={0x01, 0x03, 0x05, 0x07, 0x09,     /
//                          0x0B, 0x0D, 0x0F, 0x00, 0x02, 0x04, 0x06, 0x08,   /
//                          0x0A, 0x0C, 0x0D}" -DMAC_MAX_FRAME_SIZE=116       /
//                          -DZDNWKMGR_MIN_TRANSMISSIONS=20 "-DCONST=const    /
//                          __code" -DGENERIC=__generic                       /
//                          -DRFD_RCVC_ALWAYS_ON=TRUE -DPOLL_RATE=1000        /
//                          -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)  /
//                          -DREJOIN_POLL_RATE=440 E:\work\zigbee\ZStack-Smar /
//                          t-2.5.2b\Projects\zstack\Applications\SmartApp\So /
//                          urce\Manage\rfid\I2C.c -D SECURE=1 -D ZTOOL_P1    /
//                          -D DEVICE_TYPE_ID=0xFE -D                         /
//                          SIGNAL_AMPLIFIER_SETTING -D                       /
//                          xPOWER_AMPLIFIER_POSITION_1 -D xNWK_AUTO_POLL -D  /
//                          xHAL_UART_DMA=2 -D xHAL_UART_DMA_ALT1 -D          /
//                          xJIAJU_BUILDIN -D MT_TASK -D MT_SYS_FUNC -D       /
//                          MT_ZDO_FUNC -D NV_INIT -D NV_RESTORE -lC          /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\bin\DemoBaseZC\L /
//                          ist\ -lA E:\work\zigbee\ZStack-Smart-2.5.2b\Proje /
//                          cts\zstack\Applications\SmartApp\CC2530DB\bin\Dem /
//                          oBaseZC\List\ --diag_suppress Pe001,Pa010 -o      /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\bin\DemoBaseZC\O /
//                          bj\ -e --debug --core=plain --dptr=16,1           /
//                          --data_model=large --code_model=banked            /
//                          --calling_convention=xdata_reentrant              /
//                          --place_constants=data_rom --nr_virtual_regs 16   /
//                          -I E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zs /
//                          tack\Applications\SmartApp\CC2530DB\Devices\ -I   /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\So /
//                          urce\Common\ -I E:\work\zigbee\ZStack-Smart-2.5.2 /
//                          b\Projects\zstack\Applications\SmartApp\CC2530DB\ /
//                          Devices\..\..\Source\Connector\ -I                /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\So /
//                          urce\\EndNode\ -I E:\work\zigbee\ZStack-Smart-2.5 /
//                          .2b\Projects\zstack\Applications\SmartApp\CC2530D /
//                          B\Devices\..\..\Source\Board\ -I                  /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\So /
//                          urce\Manage\ -I E:\work\zigbee\ZStack-Smart-2.5.2 /
//                          b\Projects\zstack\Applications\SmartApp\CC2530DB\ /
//                          Devices\..\..\Source\Manage\Callbacks\ -I         /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\So /
//                          urce\Manage\debug\ -I E:\work\zigbee\ZStack-Smart /
//                          -2.5.2b\Projects\zstack\Applications\SmartApp\CC2 /
//                          530DB\Devices\..\..\Source\Manage\HeartBeat\ -I   /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\So /
//                          urce\Manage\incode\ -I E:\work\zigbee\ZStack-Smar /
//                          t-2.5.2b\Projects\zstack\Applications\SmartApp\CC /
//                          2530DB\Devices\..\..\..\..\ZMain\TI2530DB\ -I     /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\hal\include\ -I              /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\hal\target\CC2530EB\ -I      /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\mac\include\ -I              /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\mac\high_level\ -I           /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\mac\low_level\srf04\ -I      /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\mac\low_level\srf04\single_c /
//                          hip\ -I E:\work\zigbee\ZStack-Smart-2.5.2b\Projec /
//                          ts\zstack\Applications\SmartApp\CC2530DB\Devices\ /
//                          ..\..\..\..\..\..\Components\mt\ -I               /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\osal\include\ -I             /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\services\saddr\ -I           /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\services\sdata\ -I           /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\stack\af\ -I                 /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\stack\nwk\ -I                /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\stack\sapi\ -I               /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\stack\sec\ -I                /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\stack\sys\ -I                /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\stack\zdo\ -I                /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\zmac\ -I                     /
//                          E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\Devices\..\..\.. /
//                          \..\..\..\Components\zmac\f8w\ -Oh                /
//                          --require_prototypes                              /
//    List file          =  E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstac /
//                          k\Applications\SmartApp\CC2530DB\bin\DemoBaseZC\L /
//                          ist\I2C.s51                                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME I2C

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?V0

        PUBLIC ??Delay?relay
        FUNCTION ??Delay?relay,0203H
        PUBLIC ??i2c_MasterReceive?relay
        FUNCTION ??i2c_MasterReceive?relay,0203H
        PUBLIC ??i2c_MasterTransmit?relay
        FUNCTION ??i2c_MasterTransmit?relay,0203H
        PUBLIC ??i2c_Start?relay
        FUNCTION ??i2c_Start?relay,0203H
        PUBLIC ??i2c_Stop?relay
        FUNCTION ??i2c_Stop?relay,0203H
        PUBLIC Delay
        FUNCTION Delay,080203H
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBWEAK _A_P0
        PUBLIC i2c_MasterReceive
        FUNCTION i2c_MasterReceive,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC i2c_MasterTransmit
        FUNCTION i2c_MasterTransmit,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC i2c_Start
        FUNCTION i2c_Start,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC i2c_Stop
        FUNCTION i2c_Stop,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        
        CFI Names cfiNames0
        CFI StackFrame CFA_SP SP IDATA
        CFI StackFrame CFA_PSP16 PSP16 XDATA
        CFI StackFrame CFA_XSP16 XSP16 XDATA
        CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
        CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
        CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
        CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
        CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
        CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
        CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
        CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
        CFI Resource V8:8, V9:8, V10:8, V11:8, V12:8, V13:8, V14:8, V15:8, SP:8
        CFI Resource PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
        CFI VirtualResource ?RET:24
        CFI Resource ?BRET_EXT:8
        CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
        CFI ResourceParts PSP16 PSPH, PSPL
        CFI ResourceParts XSP16 XSPH, XSPL
        CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-3
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B Undefined
        CFI A Undefined
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 Undefined
        CFI R5 Undefined
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT Frame(CFA_SP, 3)
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 1
        CFI DataAlign -1
        CFI ReturnAddress ?RET CODE
        CFI CFA_DOVERLAY Used
        CFI CFA_IOVERLAY Used
        CFI CFA_SP SP+-2
        CFI CFA_PSP16 PSP16+0
        CFI CFA_XSP16 XSP16+0
        CFI `PSW.CY` SameValue
        CFI `B.BR0` SameValue
        CFI `B.BR1` SameValue
        CFI `B.BR2` SameValue
        CFI `B.BR3` SameValue
        CFI `B.BR4` SameValue
        CFI `B.BR5` SameValue
        CFI `B.BR6` SameValue
        CFI `B.BR7` SameValue
        CFI `VB.BR8` SameValue
        CFI `VB.BR9` SameValue
        CFI `VB.BR10` SameValue
        CFI `VB.BR11` SameValue
        CFI `VB.BR12` SameValue
        CFI `VB.BR13` SameValue
        CFI `VB.BR14` SameValue
        CFI `VB.BR15` SameValue
        CFI VB SameValue
        CFI B SameValue
        CFI A SameValue
        CFI PSW SameValue
        CFI DPL0 SameValue
        CFI DPH0 SameValue
        CFI R0 SameValue
        CFI R1 SameValue
        CFI R2 SameValue
        CFI R3 SameValue
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI V0 SameValue
        CFI V1 SameValue
        CFI V2 SameValue
        CFI V3 SameValue
        CFI V4 SameValue
        CFI V5 SameValue
        CFI V6 SameValue
        CFI V7 SameValue
        CFI V8 SameValue
        CFI V9 SameValue
        CFI V10 SameValue
        CFI V11 SameValue
        CFI V12 SameValue
        CFI V13 SameValue
        CFI V14 SameValue
        CFI V15 SameValue
        CFI PSPH Undefined
        CFI PSPL Undefined
        CFI XSPH Undefined
        CFI XSPL Undefined
        CFI ?RET Concat
        CFI ?BRET_EXT SameValue
        CFI ?RET_HIGH Frame(CFA_SP, 2)
        CFI ?RET_LOW Frame(CFA_SP, 1)
        CFI EndCommon cfiCommon1
        
Delay               SYMBOL "Delay"
??Delay?relay       SYMBOL "?relay", Delay
i2c_MasterReceive   SYMBOL "i2c_MasterReceive"
??i2c_MasterReceive?relay SYMBOL "?relay", i2c_MasterReceive
i2c_MasterTransmit  SYMBOL "i2c_MasterTransmit"
??i2c_MasterTransmit?relay SYMBOL "?relay", i2c_MasterTransmit
i2c_Start           SYMBOL "i2c_Start"
??i2c_Start?relay   SYMBOL "?relay", i2c_Start
i2c_Stop            SYMBOL "i2c_Stop"
??i2c_Stop?relay    SYMBOL "?relay", i2c_Stop

// E:\work\zigbee\ZStack-Smart-2.5.2b\Projects\zstack\Applications\SmartApp\Source\Manage\rfid\I2C.c
//    1 //////////////////////////////////////////////////////////////////////////////
//    2 //
//    3 //                  ELEKTOR RFID READER for MIFARE and ISO14443-A
//    4 //
//    5 //                      Copyright (c) 2006 Gerhard H. Schalk
//    6 //
//    7 //////////////////////////////////////////////////////////////////////////////
//    8 //#include <REG936.H> 
//    9 //#include <intrins.h> 
//   10 #include <iocc2530.h>

        ASEGN SFR_AN:DATA:NOROOT,080H
// union <unnamed> volatile __sfr _A_P0
_A_P0:
        DATA8
        DS 1
//   11 #include "I2C.h"
//   12 
//   13 //------------------------------------------------------------------------
//   14 // Function: i2c_Start
//   15 //------------------------------------------------------------------------
//   16 // Description:
//   17 // Generates a I2C start condition
//   18 //------------------------------------------------------------------------
//   19 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   20 void Delay(unsigned int n)
Delay:
        CFI Block cfiBlock0 Using cfiCommon0
        CFI Function Delay
        CODE
//   21 {
        ; Saved register size: 0
        ; Auto size: 0
//   22   unsigned int i,tt;
//   23   for(i = 0;i < n;i++)
        MOV     A,R2
        ORL     A,R3
        JZ      ??Delay_0
        MOV     A,R2
        MOV     R0,A
        MOV     A,R3
        MOV     R1,A
//   24     for(tt = 0;tt < 5;tt++)
??Delay_1:
        MOV     A,#0x5
//   25       asm("NOP");
??Delay_2:
        NOP
        DEC     A
        JNZ     ??Delay_2
        MOV     A,R0
        ADD     A,#-0x1
        DEC     R0
        MOV     A,R1
        ADDC    A,#-0x1
        MOV     R1,A
        MOV     A,R0
        ORL     A,R1
        JNZ     ??Delay_1
//   26 }
??Delay_0:
        LJMP    ?BRET
        CFI EndBlock cfiBlock0
//   27 

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   28 void i2c_Start (void)
i2c_Start:
        CFI Block cfiBlock1 Using cfiCommon0
        CFI Function i2c_Start
        CODE
//   29 {
        FUNCALL i2c_Start, Delay
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_Start, Delay
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_Start, Delay
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   30     // Set SDA and SCL to HIGH (I2C Bus not busy)
//   31     SDA = HIGH;
        SETB    0x80.6
//   32     SCL = HIGH;	
        SETB    0x80.7
//   33     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//   34     // Start Condition
//   35     SDA = LOW;
        CLR     0x80.6
//   36     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//   37     SCL = LOW;
        CLR     0x80.7
        CFI EndBlock cfiBlock1
//   38     Delay(30);
        ; Setup parameters for call to function Delay
        REQUIRE ?Subroutine0
        REQUIRE _A_P0
        ; // Fall through to label ?Subroutine0
//   39 
//   40 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine0:
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        CFI CFA_SP SP+-5
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
        POP     DPH
        CFI CFA_SP SP+-4
        CFI DPH0 SameValue
        POP     DPL
        CFI CFA_SP SP+-3
        CFI DPL0 SameValue
        LJMP    ?BRET
        CFI EndBlock cfiBlock2
//   41 
//   42 //------------------------------------------------------------------------
//   43 // Function: i2c_Stop
//   44 //------------------------------------------------------------------------
//   45 // Description:
//   46 // Generates a I2C stop condition
//   47 //------------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   48 void i2c_Stop (void)
i2c_Stop:
        CFI Block cfiBlock3 Using cfiCommon0
        CFI Function i2c_Stop
        CODE
//   49 {
        FUNCALL i2c_Stop, Delay
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_Stop, Delay
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_Stop, Delay
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH    DPL
        CFI DPL0 Frame(CFA_SP, 4)
        CFI CFA_SP SP+-4
        PUSH    DPH
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//   50     SCL = LOW;
        CLR     0x80.7
//   51     SDA = LOW;
        CLR     0x80.6
//   52 
//   53     // Stop Condition
//   54     //_nop_();
//   55     //_nop_();
//   56     Delay(30);
        ; Setup parameters for call to function Delay
        LCALL   ?Subroutine1 & 0xFFFF
//   57     SCL = HIGH;
//   58    // _nop_();
//   59    //_nop_();
//   60     Delay(30);
//   61     SDA = HIGH;
??CrossCallReturnLabel_0:
        SETB    0x80.6
//   62     //_nop_();
//   63     //_nop_();
//   64     Delay(30);
        ; Setup parameters for call to function Delay
        SJMP    ?Subroutine0
        CFI EndBlock cfiBlock3
        REQUIRE _A_P0
//   65 }
//   66 
//   67 //-------------------------------------------------------------------------
//   68 //  Funktion: char i2c_MasterTransmit (unsigned char output_data)
//   69 //  Input:    I2C Output Data
//   70 //  Return:   0..ACK / 1..NACK .. vom Slave
//   71 //  Schreibt Daten in einen I2C Slave
//   72 //-------------------------------------------------------------------------
//   73 
//   74 
//   75 //------------------------------------------------------------------------
//   76 // Function: i2c_MasterTransmit
//   77 //------------------------------------------------------------------------
//   78 // Description:
//   79 // Transmits a byte (slave address or data byte) from the I2C master 
//   80 // to the I2C Slave.
//   81 //------------------------------------------------------------------------
//   82 // Parameters:
//   83 // IN output_data:  Data byte to transmit.
//   84 // Return:   0..Slave ACK / 1.. Slave NACK
//   85 //------------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//   86 unsigned char i2c_MasterTransmit (unsigned char output_data)
i2c_MasterTransmit:
        CFI Block cfiBlock4 Using cfiCommon0
        CFI Function i2c_MasterTransmit
        CODE
//   87 {
        FUNCALL i2c_MasterTransmit, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_MasterTransmit, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_MasterTransmit, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_MasterTransmit, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_MasterTransmit, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0x9
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
//   88     unsigned char i, ack_Status;
//   89     unsigned char mask = 0x80;
        MOV     ?V0 + 0,#-0x80
//   90 
//   91     // Sends 8 Data Bit via I2C (MSB first)
//   92     for(i = 0; i < 8; i++) 
        MOV     R6,#0x8
//   93     {
//   94         SDA = (output_data & mask) ? 1 : 0;  // SDA = Data Bit
??i2c_MasterTransmit_0:
        MOV     A,R7
        ANL     A,?V0 + 0
        JZ      ??i2c_MasterTransmit_1
        MOV     A,#0x1
        SJMP    ??i2c_MasterTransmit_2
??i2c_MasterTransmit_1:
        CLR     A
??i2c_MasterTransmit_2:
        SWAP    A
        RLC     A
        RLC     A
        ANL     A,#0xc0
        MOV     R0,A
        MOV     A,0x80
        ANL     A,#0xbf
        ORL     A,R0
        MOV     0x80,A
//   95         mask  >>= 1;                                   // Shift Data Byte
        MOV     A,?V0 + 0
        CLR     C
        RRC     A
        MOV     ?V0 + 0,A
//   96         //_nop_();
//   97         //_nop_();
//   98         Delay(30);
        ; Setup parameters for call to function Delay
        LCALL   ?Subroutine1 & 0xFFFF
//   99         SCL = HIGH;                                    // Generate I2C clock
//  100         //_nop_();
//  101        // _nop_();
//  102         Delay(30);
//  103         SCL = LOW;
??CrossCallReturnLabel_1:
        CLR     0x80.7
//  104     }
        DEC     R6
        MOV     A,R6
        JNZ     ??i2c_MasterTransmit_0
//  105     
//  106     // Read Acknowledge from I2C Slave
//  107     SDA =   HIGH;           // SDA in Input Mode 
        SETB    0x80.6
//  108     //_nop_();
//  109     //_nop_();
//  110     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//  111     SCL = HIGH;             // Generate I2C clock
        SETB    0x80.7
//  112     ack_Status =   SDA;     // Read Slave ACK/NACK
        MOV     A,0x80
        MOV     R6,A
//  113     //_nop_();
//  114     //_nop_();
//  115     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//  116     SCL = LOW;
        CLR     0x80.7
//  117     //_nop_();
//  118     //_nop_();
//  119     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//  120     return ack_Status; // Return Acknowledge Status 0..ACK (OK), 1..NAK
        MOV     A,R6
        MOV     C,0xE0 /* A   */.6
        CLR     A
        RLC     A
        MOV     R1,A
        MOV     R7,#0x1
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock4
        REQUIRE _A_P0
//  121 }

        RSEG BANKED_CODE:CODE:NOROOT(0)
?Subroutine1:
        CFI Block cfiCond5 Using cfiCommon0
        CFI NoFunction
        CFI Conditional ??CrossCallReturnLabel_0
        CFI DPL0 Frame(CFA_SP, 4)
        CFI DPH0 Frame(CFA_SP, 5)
        CFI CFA_SP SP+-5
        CFI Block cfiCond6 Using cfiCommon0
        CFI (cfiCond6) NoFunction
        CFI (cfiCond6) Conditional ??CrossCallReturnLabel_1
        CFI (cfiCond6) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI (cfiCond6) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI (cfiCond6) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI (cfiCond6) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI (cfiCond6) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI (cfiCond6) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI (cfiCond6) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI (cfiCond6) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI (cfiCond6) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI (cfiCond6) CFA_SP SP+0
        CFI (cfiCond6) CFA_XSP16 add(XSP16, 9)
        CFI Block cfiPicker7 Using cfiCommon1
        CFI (cfiPicker7) NoFunction
        CFI (cfiPicker7) Picker
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
        SETB    0x80.7
        ; Setup parameters for call to function Delay
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
        RET
        CFI EndBlock cfiCond5
        CFI EndBlock cfiCond6
        CFI EndBlock cfiPicker7
//  122 
//  123 //------------------------------------------------------------------------
//  124 // Function: i2c_MasterTransmit
//  125 //------------------------------------------------------------------------
//  126 // Description:
//  127 // The I2C Master receives a data byte from the I2C Slave.
//  128 //------------------------------------------------------------------------
//  129 // Parameters:
//  130 // IN output_data:  I2C ACK=1 or NACK=0 Byte 
//  131 //                  NACK .. last byte to receive
//  132 // Return:          Slave Data Byte
//  133 //------------------------------------------------------------------------

        RSEG BANKED_CODE:CODE:NOROOT(0)
//  134 unsigned char i2c_MasterReceive (unsigned char ACKValue)
i2c_MasterReceive:
        CFI Block cfiBlock8 Using cfiCommon0
        CFI Function i2c_MasterReceive
        CODE
//  135 {
        FUNCALL i2c_MasterReceive, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_MasterReceive, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL i2c_MasterReceive, Delay
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV     A,#-0xa
        LCALL   ?BANKED_ENTER_XDATA
        CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
        CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
        CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
        CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
        CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
        CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
        CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
        CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
        CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
        CFI CFA_SP SP+0
        CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV     A,R1
        MOV     R7,A
//  136     unsigned char i;
//  137     unsigned char input_data = 0;
        MOV     ?V0 + 0,#0x0
//  138     unsigned char mask = 0x80;
        MOV     ?V0 + 1,#-0x80
//  139     
//  140     // Reads 8 Data Bit via I2C (MSB first)
//  141     for(i = 0; i < 8; i++)
        MOV     R6,#0x8
//  142     {
//  143         SCL = HIGH;           
??i2c_MasterReceive_0:
        SETB    0x80.7
//  144         if(SDA==HIGH)           // Read and store Data Bit 
        MOV     C,0x80.6
        JNC     ??i2c_MasterReceive_1
//  145             input_data |= mask;
        MOV     A,?V0 + 1
        ORL     ?V0 + 0,A
//  146         mask >>= 1;
??i2c_MasterReceive_1:
        MOV     A,?V0 + 1
        CLR     C
        RRC     A
        MOV     ?V0 + 1,A
//  147         SCL = LOW;            
        CLR     0x80.7
//  148         Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//  149     }
        DEC     R6
        MOV     A,R6
        JNZ     ??i2c_MasterReceive_0
//  150 
//  151     // Send Acknowledge to I2C Slave
//  152     SDA = ACKValue;          // Send ACK
        MOV     A,R7
        MOV     C,0xE0 /* A   */.0
        MOV     0x80.6,C
//  153     SCL = HIGH;              
        SETB    0x80.7
//  154     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//  155     SCL = LOW;               
        CLR     0x80.7
//  156     SDA = HIGH;              // SDA in Input Mode 
        SETB    0x80.6
//  157     Delay(30);
        ; Setup parameters for call to function Delay
        MOV     R2,#0x1e
        MOV     R3,#0x0
        LCALL   ??Delay?relay
//  158     return input_data;
        MOV     R1,?V0 + 0
        MOV     R7,#0x2
        LJMP    ?BANKED_LEAVE_XDATA
        CFI EndBlock cfiBlock8
        REQUIRE _A_P0
//  159 }

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??Delay?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    Delay

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??i2c_Start?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    i2c_Start

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??i2c_Stop?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    i2c_Stop

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??i2c_MasterTransmit?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    i2c_MasterTransmit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
??i2c_MasterReceive?relay:
        LCALL   ?BDISPATCH
        DATA
        DC24    i2c_MasterReceive

        END
// 
// 268 bytes in segment BANKED_CODE
//  30 bytes in segment BANK_RELAYS
//   1 byte  in segment SFR_AN
// 
// 298 bytes of CODE memory
//   0 bytes of DATA memory (+ 1 byte shared)
//
//Errors: none
//Warnings: none
